plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.0'
    id 'io.spring.dependency-management' version '1.1.7'
    id 'org.flywaydb.flyway' version '10.21.0'
    id 'jacoco' 
}

group = 'com.smartrent'
version = '0.0.1-SNAPSHOT'
description = 'Demo project for Spring Boot'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:2024.0.0"
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-resource-server'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-mysql'
    implementation 'jakarta.validation:jakarta.validation-api:3.1.1'
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    // Cloudflare R2 (AWS S3 compatible) SDK
    implementation 'software.amazon.awssdk:s3:2.25.32'
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'
    implementation("org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.13")

    // Circuit Breaker and Retry dependencies
    implementation 'org.springframework.cloud:spring-cloud-starter-circuitbreaker-resilience4j'
    implementation 'io.github.resilience4j:resilience4j-retry'
    implementation 'io.github.resilience4j:resilience4j-micrometer'

    // Environment variables from .env file
    implementation 'io.github.cdimascio:dotenv-java:3.0.0'
}

tasks.named('test') {
    useJUnitPlatform()
    finalizedBy jacocoTestReport 
}

jacoco {
    toolVersion = "0.8.10" 
}

jacocoTestReport {
    dependsOn test 
    reports {
        xml.required = true 
        html.required = true
    }
}

// Flyway configuration
flyway {
    url = project.hasProperty('dbUrl') ? project.property('dbUrl') : 'jdbc:mysql://localhost:3306/smartrent'
    user = project.hasProperty('dbUser') ? project.property('dbUser') : 'root'
    password = project.hasProperty('dbPassword') ? project.property('dbPassword') : 'root'
    locations = ['classpath:db/migration']
    baselineOnMigrate = true
    baselineVersion = '0'
    validateOnMigrate = true
}
