server:
  port: 8080

# Logging Configuration
logging:
  level:
    root: INFO
    com.smartrent: INFO
      publicUrl: ${S3_PUBLIC_URL}

# Resilience4j Configuration for Circuit Breaker and Retry patterns
resilience4j:
  circuitbreaker:
    configs:
      default:
        registerHealthIndicator: true
        slidingWindowSize: 10
        slidingWindowType: COUNT_BASED
        minimumNumberOfCalls: 5
        permittedNumberOfCallsInHalfOpenState: 3
        automaticTransitionFromOpenToHalfOpenEnabled: true
        waitDurationInOpenState: 30s
        failureRateThreshold: 50
        eventConsumerBufferSize: 10
        recordExceptions:
          - feign.FeignException
          - java.lang.RuntimeException
    instances:
      emailService:
        baseConfig: default
        recordFailurePredicate: com.smartrent.config.retry.email.EmailServiceFailurePredicate

  retry:
    configs:
      default:
        maxAttempts: 3
        waitDuration: 1s
        exponentialBackoffMultiplier: 2.0
        enableExponentialBackoff: true
        retryExceptions:
          - feign.FeignException
        ignoreExceptions:
          - feign.FeignException$BadRequest
          - feign.FeignException$Unauthorized
          - feign.FeignException$Forbidden
    instances:
      emailService:
        baseConfig: default

  timelimiter:
    configs:
      default:
        timeoutDuration: 10s
        cancelRunningFuture: true
    instances:
      emailService:
        baseConfig: default

# Management endpoints for monitoring circuit breaker health
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,circuitbreakers,retries
  endpoint:
    health:
      show-details: always
  health:
    circuitbreakers:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
    methods:
      get:
        - "/swagger-ui/**"
        - "/swagger-ui.html"
        - "/v3/api-docs/**"
        - "/v3/api-docs"
        - "/swagger-resources/**"
        - "/webjars/**"
        - "/actuator/health"
        - "/actuator/**"
      post:
        - "/v1/auth/**"
        - "/v1/users"
        - "/v1/admins"
  authentication:
    jwt:
      access-signer-key: "${ACCESS_SIGNER_KEY}"
      refresh-signer-key: "${REFRESH_SIGNER_KEY}"
      reset-password-signer-key: "${RESET_PASSWORD_SIGNER_KEY}"
      valid-duration: "${VALID_DURATION}"
      refreshable-duration: "${REFRESHABLE_DURATION}"
      reset_password_duration: "${RESET_PASSWORD_DURATION}"
  api-key:
    brevo: "${BREVO_API_KEY}"
  email:
    sender:
      email: "${SENDER_EMAIL}"
      name: "${SENDER_NAME:SmartRent}"
    subject: "SmartRent"
  otp:
    length: 6
    duration: 60 #s
  email-retry:
    max-attempts: 3
    base-wait-duration: 2000 # milliseconds
    exponential-multiplier: 2.0
    jitter-percentage: 0.25
    min-wait-duration: 1000 # milliseconds
  circuit-breaker:
    failure-rate-threshold: 60 # percentage
    wait-duration-in-open-state: 120 # seconds
    sliding-window-size: 20
    minimum-number-of-calls: 10
    permitted-calls-in-half-open: 5
    timeout-duration: 15 # seconds
feign:
  client:
    config:
      brevo:
        url: "${BREVO_URL}"

springdoc:
  api-docs:
    path: /v3/api-docs
  swagger-ui:
    path: /swagger-ui.html
    enabled: true

open:
  api:
    title: "SmartRent API"
    version: "v1.0.0"
    description: "API for SmartRent Application"
    server:
      url: "http://localhost:8080"
      description: "Local Server."
    group:
      package-to-scan: "com.smartrent.controller"
  # S3-compatible storage config (Cloudflare R2, DigitalOcean Spaces, AWS S3, etc.)
  storage:
    s3:
      endpoint: ${S3_ENDPOINT}
      region: ${S3_REGION}
      accessKey: ${S3_ACCESS_KEY}
      secretKey: ${S3_SECRET_KEY}
      bucketName: ${S3_BUCKET}
      publicUrl: ${S3_PUBLIC_URL}