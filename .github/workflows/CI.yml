name: Java CI with Gradle

on:
  push:
    branches: [ "main"]
  pull_request:
    branches: [ "main"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  unit-test:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    defaults:
      run:
        working-directory: ./smart-rent

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('smart-rent/**/gradle-wrapper.properties') }}-${{ hashFiles('smart-rent/**/*.gradle*', 'smart-rent/**/buildSrc/**/*.kt') }}
          restore-keys: |
            gradle-${{ runner.os }}-
            gradle-

      - name: Build and Run unit tests with coverage
        run: |
          chmod +x gradlew
          ./gradlew build jacocoTestReport \
            --no-daemon \
            --parallel \
            --build-cache \
            --continue

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: ./smart-rent
          args: >
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ secrets.SONAR_ORG }}
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.java.binaries=build/classes
            -Dsonar.coverage.jacoco.xmlReportPaths=build/reports/jacoco/test/jacocoTestReport.xml
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  build-and-push:
    runs-on: ubuntu-latest
    needs: unit-test
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    defaults:
      run:
        working-directory: ./smart-rent
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ..
          file: ../Dockerfile
          push: true
          tags: |
            vuhuydiet/smart-rent:${{ github.sha }}
            vuhuydiet/smart-rent:dev

  update-dev-deployment:
    runs-on: ubuntu-latest
    needs: build-and-push
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout Deployment Repository
        uses: actions/checkout@v4
        with:
          repository: 'Vuhuydiet/smartrent-deploy'
          token: ${{ secrets.DEPLOY_REPO_TOKEN }}
          path: 'smartrent-deploy'

      - name: Update image tags in values.yaml
        uses: mikefarah/yq@master
        with:
          cmd: yq -i '.BEServer.image.tag = "${{ github.sha }}"' smartrent-deploy/charts/smartrent/environments/dev/values.yaml

      - name: Commit and push changes
        working-directory: smartrent-deploy
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add charts/smartrent/environments/dev/values.yaml
          
          if git diff --staged --quiet; then
            echo "No changes to commit"
            exit 0
          fi
          
          COMMIT_LINK="https://github.com/${{ github.repository }}/commit/${{ github.sha }}"
          COMMIT_MESSAGE="Deploy: ${{ github.event.head_commit.message }} (${COMMIT_LINK})"
          git commit -m "$COMMIT_MESSAGE"
          git push
