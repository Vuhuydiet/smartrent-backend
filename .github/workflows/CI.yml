name: Java CI with Gradle

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    defaults:
      run:
        working-directory: ./smart-rent

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('smart-rent/**/gradle-wrapper.properties') }}-${{ hashFiles('smart-rent/**/*.gradle*', 'smart-rent/**/buildSrc/**/*.kt') }}
          restore-keys: |
            gradle-${{ runner.os }}-
            gradle-

      - name: Make gradlew executable
        run: chmod +x gradlew

      - name: Build and Run unit tests with coverage
        run: |
          ./gradlew build jacocoTestReport \
            --no-daemon \
            --parallel \
            --build-cache \
            --continue

      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@v2
        with:
          projectBaseDir: ./smart-rent
          args: >
            -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
            -Dsonar.organization=${{ secrets.SONAR_ORG }}
            -Dsonar.host.url=https://sonarcloud.io
            -Dsonar.java.binaries=build/classes
            -Dsonar.coverage.jacoco.xmlReportPaths=build/reports/jacoco/test/jacocoTestReport.xml
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  docker:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev')
    defaults:
      run:
        working-directory: ./smart-rent
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker Image
        run: |
          IMAGE_NAME="vuhuydiet/smart-rent"
          COMMIT_SHA=$(echo "${GITHUB_SHA}" | cut -c1-8)
          ENV_TAG="dev"
          
          echo "Building image $IMAGE_NAME:$COMMIT_SHA and $IMAGE_NAME:$ENV_TAG"
          
          docker build \
            -f ../Dockerfile \
            -t $IMAGE_NAME:$COMMIT_SHA \
            -t $IMAGE_NAME:$ENV_TAG \
            ..
          
          docker push $IMAGE_NAME:$COMMIT_SHA
          docker push $IMAGE_NAME:$ENV_TAG

  update-deployment:
    runs-on: ubuntu-latest
    needs: docker
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/dev')
    steps:
      - name: Checkout deployment repository
        uses: actions/checkout@v4
        with:
          repository: 'Vuhuydiet/smartrent-deploy'
          token: ${{ secrets.DEPLOY_REPO_TOKEN }}
          path: 'deploy-repo'

      - name: Set environment variables
        id: env
        run: |
          COMMIT_SHA=$(echo "${GITHUB_SHA}" | cut -c1-8)
          ENVIRONMENT=$([[ "${GITHUB_REF}" == "refs/heads/main" ]] && echo "prd" || echo "dev")
          VALUES_FILE="charts/smartrent/environments/${ENVIRONMENT}/values.yaml"
          
          echo "commit-sha=$COMMIT_SHA" >> $GITHUB_OUTPUT
          echo "environment=$ENVIRONMENT" >> $GITHUB_OUTPUT
          echo "values-file=$VALUES_FILE" >> $GITHUB_OUTPUT

      - name: Update image tags in values.yaml
        run: |
          echo "Updating image tags to: ${{ steps.env.outputs.commit-sha }} for environment: ${{ steps.env.outputs.environment }}"
          
          sed -i '/^AIServer:/,/^[A-Za-z]/ s/^    tag: .*/    tag: ${{ steps.env.outputs.commit-sha }}/' deploy-repo/${{ steps.env.outputs.values-file }}
          
          echo "Updated values.yaml content:"
          cat deploy-repo/${{ steps.env.outputs.values-file }}

      - name: Get commit info
        id: commit-info
        run: |
          COMMIT_MSG="${{ github.event.head_commit.message }}"
          echo "commit-message=$COMMIT_MSG" >> $GITHUB_OUTPUT

          COMMIT_SHA=$(echo "${GITHUB_SHA}" | cut -c1-8)
          echo "commit-sha=$COMMIT_SHA" >> $GITHUB_OUTPUT

          COMMIT_LINK="https://github.com/${GITHUB_REPOSITORY}/commit/${GITHUB_SHA}"
          echo "commit-link=$COMMIT_LINK" >> $GITHUB_OUTPUT

      - name: Commit and push changes
        run: |
          cd deploy-repo
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add charts/smartrent/environments/dev/values.yaml
          
          if git diff --staged --quiet; then
            echo "No changes to commit"
            exit 0
          fi
          
          COMMIT_MESSAGE="${{ steps.commit-info.outputs.commit-sha }}: ${{ steps.commit-info.outputs.commit-message }} ${{ steps.commit-info.outputs.commit-link }}"
          git commit -m "$COMMIT_MESSAGE"
          git push
